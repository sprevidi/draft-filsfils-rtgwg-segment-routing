<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-filsfils-rtgwg-segment-routing-01"
     ipr="trust200902">
  <front>
    <title abbrev="Segment Routing">Segment Routing Architecture</title>

    <author fullname="Clarence Filsfils" initials="C." role="editor"
            surname="Filsfils">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street/>

          <city>Brussels</city>

          <region/>

          <code/>

          <country>BE</country>
        </postal>

        <email>cfilsfil@cisco.com</email>
      </address>
    </author>

    <author fullname="Stefano Previdi" initials="S." role="editor"
            surname="Previdi">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Via Del Serafico, 200</street>

          <city>Rome</city>

          <code>00142</code>

          <country>Italy</country>
        </postal>

        <email>sprevidi@cisco.com</email>
      </address>
    </author>

    <author fullname="Ahmed Bashandy" initials="A." surname="Bashandy">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>170, West Tasman Drive</street>

          <city>San Jose</city>

          <region>CA</region>

          <code>95134</code>

          <country>US</country>
        </postal>

        <email>bashandy@cisco.com</email>
      </address>
    </author>

    <author fullname="Bruno Decraene" initials="B." surname="Decraene">
      <organization>Orange</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <code/>

          <country>FR</country>
        </postal>

        <email>bruno.decraene@orange.com</email>
      </address>
    </author>

    <author fullname="Stephane Litkowski" initials="S." surname="Litkowski">
      <organization>Orange</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <code/>

          <country>FR</country>
        </postal>

        <email>stephane.litkowski@orange.com</email>
      </address>
    </author>

    <author fullname="Martin Horneffer" initials="M." surname="Horneffer">
      <organization>Deutsche Telekom</organization>

      <address>
        <postal>
          <street>Hammer Str. 216-226</street>

          <city>Muenster</city>

          <code>48153</code>

          <country>DE</country>
        </postal>

        <email>Martin.Horneffer@telekom.de</email>
      </address>
    </author>

    <author fullname="Igor Milojevic" initials="I." surname="Milojevic">
      <organization>Telekom Srbija</organization>

      <address>
        <postal>
          <street>Takovska 2</street>

          <city>Belgrade</city>

          <code/>

          <country>RS</country>
        </postal>

        <email>igormilojevic@telekom.rs</email>
      </address>
    </author>

    <author fullname="Rob Shakir" initials="R." surname="Shakir">
      <organization>British Telecom</organization>

      <address>
        <postal>
          <street/>

          <city>London</city>

          <code/>

          <country>UK</country>
        </postal>

        <email>rob.shakir@bt.com</email>
      </address>
    </author>

    <author fullname="Saku Ytti" initials="S." surname="Ytti">
      <organization>TDC Oy</organization>

      <address>
        <postal>
          <street>Mechelininkatu 1a</street>

          <city>TDC</city>

          <code>00094</code>

          <country>FI</country>
        </postal>

        <email>saku@ytti.fi</email>
      </address>
    </author>

    <author fullname="Wim Henderickx" initials="W." surname="Henderickx">
      <organization>Alcatel-Lucent</organization>

      <address>
        <postal>
          <street>Copernicuslaan 50</street>

          <city>Antwerp</city>

          <code>2018</code>

          <country>BE</country>
        </postal>

        <email>wim.henderickx@alcatel-lucent.com</email>
      </address>
    </author>

    <author fullname="Jeff Tantsura" initials="J." surname="Tantsura">
      <organization>Ericsson</organization>

      <address>
        <postal>
          <street>300 Holger Way</street>

          <city>San Jose</city>

          <region>CA</region>

          <code>95134</code>

          <country>US</country>
        </postal>

        <email>Jeff.Tantsura@ericsson.com</email>
      </address>
    </author>

    <author fullname="Edward Crabbe" initials="E." surname="Crabbe">
      <organization>Google, Inc.</organization>

      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>

          <city>Mountain View</city>

          <region>CA</region>

          <code>94043</code>

          <country>US</country>
        </postal>

        <email>edc@google.com</email>
      </address>
    </author>

    <date day="18" month="October" year="2013"/>

    <workgroup>Network Working Group</workgroup>

    <abstract>
      <t>Segment Routing (SR) leverages the source routing paradigm. A node
      steers a packet through a controlled set of instructions, called
      segments, by prepending the packet with an SR header. A segment can
      represent any instruction, topological or service-based. A segment can
      have a local semantic to an SR node or global within an SR domain. SR
      allows to enforce a flow through any topological path and service chain
      while maintaining per-flow state only at the ingress node to the SR
      domain.</t>

      <t>The Segment Routing architecture can be directly applied to the MPLS
      dataplane with no change on the forwarding plane. IGP-based segments
      require minor extension to the existing link-state routing protocols.
      Segment Routing can also be applied to IPv6 with a new type of routing
      extension header.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>In this section, we illustrate the key properties of the SR
      architecture, introduce the companion documents to this note and relate
      SR to the MPLS and IPv6 architectures.</t>

      <t><xref target="ABSTRACTMODEL"/> defines the SR abstract routing model.
      <xref target="IGPSEGMENTS"/> defines the IGP-based segments. <xref
      target="SRVCSSEGMENTS"/> defines the Service Segments.</t>

      <section title="Illustration">
        <t>In the context of <xref target="SRPROPS"/> where all the links have
        the same IGP cost, let us assume that a packet P enters the SR domain
        at an ingress edge router I and that the operator requests the
        following requirements for packet P:<list style="hanging">
            <t>The local service S offered by node B must be applied to packet
            P.</t>

            <t>The links AB and CE cannot be used to transport the packet
            P.</t>

            <t>Any node N along the journey of the packet should be able to
            determine where the packet P entered the SR domain and where it
            will exit. The intermediate node should be able to determine the
            paths from the ingress edge router to itself, and from itsef to
            the egress edge router.</t>

            <t>Per-flow State for packet P should only be created at the
            ingress edge router.</t>

            <t>State for packet P can only be created at the ingress edge
            router.</t>

            <t>The operator can forbid, for security reasons, anyone outside
            the operator domain to exploit its intra-domain SR
            capabilities.</t>
          </list></t>

        <figure align="center" anchor="SRPROPS"
                title="An illustration of SR properties">
          <artwork>I---A---B---C---E
     \  |  / \ /
      \ | /   F
       \|/
        D</artwork>
        </figure>

        <t>All these properties may be realized by instructing the ingress SR
        edge router I to push the following abstract SR header on the packet
        P.</t>

        <figure anchor="SRHEADER" title="Packet P at node I">
          <artwork>+---------------------------------------------------------------+
|                                   |                           |
|      Abstract SR Header           |                           |
|                                   |                           |
| {SD, SB, SS, SF, SE}, Ptr, SI, SE |        Transported        |
|  ^                     |          |           Packet          |
|  |                     |          |             P             |
|  +---------------------+          |                           |
|                                   |                           |
+---------------------------------------------------------------+</artwork>
        </figure>

        <t>The abstract SR header contains a source route encoded as a list of
        segments {SD, SB, SS, SF, SE}, a pointer (Ptr) and the identification
        of the ingress and egress SR edge routers (segments SI and SE).</t>

        <t>A segment is a 32-bit identification either for a topological
        instruction or a service instruction. A segment can either be global
        or local. The instruction associated with a global segment is
        recognized and executed by any SR-capable node in the domain. The
        instruction associated with a local segment is only supported by the
        specific node that originates it.</t>

        <t>Let us assume some ISIS/OSPF extensions to define a &ldquo;Node
        Segment&rdquo; as a global instruction within the IGP domain to
        forward a packet along the shortest path to the specified node. Let us
        further assume that within the SR domain illustrated in Figure 1,
        segments SI, SD, SB, SE and SF respectively identify IGP node segments
        to I, D, B, E and F.</t>

        <t>Let us assume that node B identifies its local service S with local
        segment SS.</t>

        <t>With all of this in mind, let us describe the journey of the packet
        P.</t>

        <t>The packet P reaches the ingress SR edge router. I pushes the SR
        header illustrated in Figure 2 and sets the pointer to the first
        segment of the list (SD).</t>

        <t>SD is an instruction recognized by all the nodes in the SR domain
        which causes the packet to be forwarded along the shortest path to
        D.</t>

        <t>Once at D, the pointer is incremented and the next segment is
        executed (SB).</t>

        <t>SB is an instruction recognized by all the nodes in the SR domain
        which causes the packet to be forwarded along the shortest path to
        B.</t>

        <t>Once at B, the pointer is incremented and the next segment is
        executed (SS).</t>

        <t>SS is an instruction only recognized by node B which causes the
        packet to receive service S.</t>

        <t>Once the service applied, the next segment is executed (SF) which
        causes the packet to be forwarded along the shortest path to F.</t>

        <t>Once at F, the pointer is incremented and the next segment is
        executed (SE).</t>

        <t>SE is an instruction recognized by all the nodes in the SR domain
        which causes the packet to be forwarded along the shortest path to
        E.</t>

        <t>E then removes the SR header and the packet continues its journey
        outside the SR domain.</t>

        <t>All of the requirements are met.</t>

        <t>First, the packet P has not used links AB and CE: the shortest-path
        from I to D is I-A-D, the shortest-path from D to B is D-B, the
        shortest-path from B to F is B-C-F and the shortest-path from F to E
        is F-E, hence the packet path through the SR domain is I-A-D-B-C-F-E
        and the links AB and CE have been avoided.</t>

        <t>Second, the service S supported by B has been applied on packet
        P.</t>

        <t>Third, any node along the packet path is able to identify the
        service and topological journey of the packet within the SR domain.
        For example, node C receives the packet illustrated in <xref
        target="SRHEADER2"/> and hence is able to infer where the packet
        entered the SR domain (SI), how it got up to itself {SD, SB, SS, SE},
        where it will exit the SR domain (SE) and how it will do so {SF,
        SE}.</t>

        <figure anchor="SRHEADER2" title="Packet P at node C">
          <artwork>+---------------------------------------------------------------+
|                                   |                           |
|           SR Header               |                           |
|                                   |                           |
| {SD, SB, SS, SF, SE}, Ptr, SI, SE |        Transported        |
|               ^        |          |           Packet          |
|               |        |          |             P             |
|               +--------+          |                           |
|                                   |                           |
+---------------------------------------------------------------+</artwork>
        </figure>

        <t>Fourth, only node I maintains per-flow state for packet P. The
        entire program of topological and service instructions to be executed
        by the SR domain on packet P is encoded by the ingress edge router I
        in the SR header in the form of a list of segments where each segment
        identifies a specific instruction. No further per-flow state is
        required along the packet path. The per-flow state is in the SR header
        and travels with the packet. Intermediate nodes only hold states
        related to the IGP global node segments and the local IGP adjacency
        segments. These segments are not per-flow specific and hence scale
        very well. Typically, an intermediate node would maintain in the order
        of 100&rsquo;s to 1000&rsquo;s global node segments and in the order
        of 10&rsquo;s to 100 of local adjacency segments. Typically the SR IGP
        forwarding table is expected to be much less than 10000 entries.</t>

        <t>Fifth, the SR header is inserted at the entrance to the domain and
        removed at the exit of the operator domain. For security reasons, the
        operator can forbid anyone outside its domain to use its intra-domain
        SR capability.</t>
      </section>

      <section anchor="TERMINOLOGY" title="Terminology">
        <t>The following terminology is defined:</t>

        <texttable anchor="TERMTABLE" style="all"
                   title="Segment Routing Terminology">
          <ttcol align="center">Term</ttcol>

          <ttcol align="left">Definition</ttcol>

          <c>Segment</c>

          <c>A segment that identifies an instruction</c>

          <c>SID</c>

          <c>A 32-bit identification for a segment</c>

          <c>Segment List</c>

          <c>Ordered list of segments encoding the topological and service
          source route of the packet</c>

          <c>Active Segment</c>

          <c>The segment that MUST be used by the receiving router to process
          the packet. It is identified by the pointer</c>

          <c>SR-Pointer or pointer</c>

          <c>In the SR header, it indicates the active segment in the segment
          list</c>

          <c>Global Segment</c>

          <c>The related instruction is supported by all the SR-capable nodes
          in the local domain</c>

          <c>SRGB</c>

          <c>SR Global Block: the set of global segments in the local SR
          domain</c>

          <c>Local Segment</c>

          <c>The related instruction is supported only by the node originating
          it</c>

          <c>IGP Segment or IGP SID</c>

          <c>The generic names for a segment attached to a piece of
          information advertised by a link-state IGP, e.g. an IGP prefix or an
          IGP adjacency</c>

          <c>IGP-Prefix Segment or Prefix-SID</c>

          <c>An IGP-Prefix Segment is an IGP segment attached to an IGP
          prefix. An IGP-Prefix Segment is always global within the SR/IGP
          domain and identifies the ECMP-aware shortest-path computed by the
          IGP to the related prefix. The Prefix-SID is the SID of the
          IGP-Prefix Segment</c>

          <c>IGP-Node Segment or Node Segment or Node-SID</c>

          <c>An IGP-Node Segment is a an IGP-Prefix Segment which identifies a
          specific router (e.g. a loopback). The terms "Node Segment" or
          Node-SID" are often used as an abbreviation</c>

          <c>IGP-Anycast Segment or Anycast Segment or Anycast-SID</c>

          <c>An IGP-Anycast Segment is an IGP-prefix segment which does not
          identify a specific router, but a set of routers. The terms "Anycast
          Segment" or "Anycast-SID" are often used as an abbreviation</c>

          <c>IGP-Adjacency Segment or Adjacency Segment or Adj-SID</c>

          <c>An IGP-Adjacency Segment is an IGP segment attached to an
          unidirectional adjacency or a set of unidirectional adjacencies. An
          IGP-Adjacency Segment is local to the node which advertises it</c>

          <c>SRDB</c>

          <c>The SR Database. Each entry is indexed by a segment value. Each
          entry must list the SR header operation to apply and the next-hop to
          forward the packet to</c>

          <c>SR Header Operation</c>

          <c>Push, Continue and Next are operations applied on the SR segment
          list</c>
        </texttable>
      </section>

      <section anchor="PROPERTIES" title="Properties">
        <t>Assuming a packet flow F entering an SR domain at ingress SR edge
        router I, the properties offered by the SR architecture are:<list
            style="hanging">
            <t>Per-Flow state for F is only maintained by node I.</t>

            <t>Any topological path through the SR domain can be enforced.</t>

            <t>Any chain of services through the SR domain can be
            enforced.</t>

            <t>Any mix of topological paths and chain of services can be
            enforced.</t>

            <t>Any node along the flow path can determine where flow entered
            the SR domain, how it got up to that node, where it will exit the
            SR domain and how it will get there.</t>
          </list></t>
      </section>

      <section anchor="DOCUMENTS" title="Companion Documents">
        <t>This document defines the SR architecture, its routing model, the
        IGP-based segments and the service segments.</t>

        <t>Use cases are described in <xref
        target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>

        <t>The support of SR by the MPLS dataplane is documented in <xref
        target="draft-filsfils-spring-segment-routing-mpls-00"/>.</t>

        <t>The support of SR on the Ipv6 dataplane will be documented in a
        future document.</t>

        <t>IS-IS protocol extensions for Segment Routing are described in
        <xref target="I-D.previdi-isis-segment-routing-extensions"/>.</t>

        <t>OSPF protocol extensions for Segment Routing are described in <xref
        target="I-D.psenak-ospf-segment-routing-extensions"/> and <xref
        target="I-D.psenak-ospf-segment-routing-ospfv3-extension"/>.</t>

        <t>The FRR solution for SR is documented in <xref
        target="I-D.francois-sr-frr"/>.</t>

        <t>The PCEP protocol extensions for Segment Routing are defined in
        <xref target="I-D.sivabalan-pce-segment-routing"/>.</t>

        <t>The interaction between SR/MPLS with other MPLS Signaling planes is
        documented in <xref
        target="draft-filsfils-spring-segment-routing-ldp-interop-00"/>.</t>
      </section>

      <section anchor="MPLSV6" title="Relationship with  MPLS and IPv6">
        <t>The source routing model is inherited from the one proposed by and
        <xref target="RFC1940"/> and <xref target="RFC2460"/>.</t>

        <t>The notion of abstract segment identifier which can represent any
        instruction is inherited from MPLS (<xref target="RFC3031"/>).</t>

        <t>Deployment experiences has shown the need to limit the number of
        per- flow states maintained in the network while preserving
        information on the topological and service journey of a packet (e.g.
        the ingress to the domain for accounting/billing purpose).</t>

        <t>The main differences from the IPv6 source route model are:<list
            style="hanging">
            <t>The source route is encoded as an ordered list of segments
            instead of IP addresses.</t>

            <t>A segment can represent any instruction either a service or a
            topological path. Topologically, the path to an IP address is
            often limited to the shortest-path to that address. A segment can
            represent any path (e.g. an adjacency segment forces a packet to a
            nexthop through a specific adjacency even if the shortest-path to
            the next-hop does not use that adjacency).</t>

            <t>The ingress and egress egde routers are identified and always
            available, allowing for interesting accounting and policy
            applications.</t>

            <t>The source route functionality cannot be controlled from
            outside the SR domain.</t>
          </list></t>

        <t>The main differences from the current MPLS model are:<list
            style="hanging">
            <t>Globally indexed segments are introduced (e.g. IGP Prefix
            segments).</t>

            <t>LDP and RSVP MPLS signaling protocols are not required. If
            present, SR can coexist and interwork with LDP and RSVP. <xref
            target="draft-filsfils-spring-segment-routing-ldp-interop-00"/>.</t>

            <t>Per-flow states are only maintained at the ingress edge
            router.</t>
          </list></t>

        <t>SR can be instantiated on the IPv6 dataplane. A future document
        will detail the new routing extension header which carry all the
        elements of the abstract SR header. All the SR properties are
        preserved.</t>

        <t>SR can be instantiated on the MPLS dataplane as detailed in <xref
        target="draft-filsfils-spring-segment-routing-mpls-00"/>.</t>
      </section>
    </section>

    <section anchor="ABSTRACTMODEL" title="Abstract Routing Model">
      <t>Segment Routing (SR) leverages the source routing paradigm.</t>

      <t>At the entrance of the SR domain, the ingress SR edge router pushes
      the SR header on top of the packet. At the exit of the SR domain, the
      egress SR edge router removes the SR header.</t>

      <t>The SR header contains an ordered list of segments, a pointer
      identifying the next segment to process and the identifications of the
      ingress and egress SR edge routers on the path of this packet. The
      pointer identifies the segment that MUST be used by the receiving router
      to process the packet. This segment is called the active segment.</t>

      <t>A property of the architecture is that the entire source route of the
      packet, including the identity of the ingress and egress edge routers is
      always available with the packet. This allows for interesting accounting
      and service applications.</t>

      <t>We define three SR-header operations: <list style="hanging">
          <t>&ldquo;PUSH&rdquo;: an SR header is pushed on an IP packet, or
          additional segments are added at the head of the segment list. The
          pointer is moved to the first entry of the added segments.</t>

          <t>&ldquo;NEXT&rdquo;: the active segment is completed, the pointer
          is moved to the next segment in the list.</t>

          <t>&ldquo;CONTINUE&rdquo;: the active segment is not completed, the
          pointer is left unchanged.</t>
        </list></t>

      <t>In the future, other SR-header management operations may be
      defined.</t>

      <t>As the packet travels through the SR domain, the pointer is
      incremented through the ordered list of segments and the source route
      encoded by the SR ingress edge node is executed.</t>

      <t>A node processes an incoming packet according to the instruction
      associated with the active segment.</t>

      <t>Any instruction might be associated with a segment: for example, an
      intra or inter-domain topological strict or loose forwarding
      instruction, a service instruction, etc.</t>

      <t>At minimum, a segment instruction must define two elements: the
      identity of the next-hop to forward the packet to (this could be the
      same node or a context within the node) and which SR-header management
      operation to execute.</t>

      <t>Each segment is known in the network through a Segment Identifier
      (SID), a value allocated from the 32-bit Segment IDentifier space. The
      first 16 values are reserved. The terms &ldquo;segment&rdquo; and
      &ldquo;SID&rdquo; are interchangeable.</t>

      <t>Within an SR domain, all the SR-capable nodes are configured with the
      Segment Routing Global Block (SRGB). The SRGB is a subset of the 32-bit
      SID space. SRGB can be a non-contiguous set of segments.</t>

      <t>All global segments must be allocated from the SRGB. Any SR capable
      node MUST be able to process any global segment advertised by any other
      node within the SR domain.</t>

      <t>Any segment outside the SRGB has a local significance and is called a
      &ldquo;local segment&rdquo;. An SR-capable node MUST be able to process
      the local segments it originates. An SR-capable node MUST NOT support
      the instruction associated with a local segment originated by a remote
      node.</t>

      <section anchor="SRTE" title="Traffic Engineering with SR">
        <t>An SR Traffic Engineering policy is composed of two elements: a
        flow classification and a segment-list to prepend on the packets of
        the flow.</t>

        <t>In the SR architecture, this per-flow state only exists at the
        ingress egde router whether the policy is defined and the SR header is
        pushed.</t>

        <t>It is outside the scope of the document to define the process that
        leads to the instantiation at a node N of an SR Traffic Engineering
        policy.</t>

        <t><xref target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>
        illustrates various alternatives:<list style="hanging">
            <t>N is deriving this policy automatically (e.g. FRR).</t>

            <t>N is provisioned explicitly by the operator.</t>

            <t>N is provisioned by a stateful PCE server.</t>

            <t>N is provisioned by the operator with a high-level policy which
            is mapped into a path thanks to a local CSPF-based computation
            (e.g. affinity/SRLG exclusion).</t>
          </list></t>

        <t>Any architecture that involves the insertion of information onto a
        packet involves performance consideration. <xref
        target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>explains why
        the majority of use-cases require very short segment-lists.</t>

        <t>A stateful PCE server, which desires to instantiate at node N an SR
        Traffic Engineering policy, collects the SR capability of node N such
        as to ensure that the policy meets its capability <xref
        target="I-D.sivabalan-pce-segment-routing"/>.</t>
      </section>

      <section anchor="SRDB" title="Segment Routing Database">
        <t>The Segment routing Database (SRDB) is a set of entries where each
        entry is identified by a segment value. The instruction associated
        with each entry at least defines the identity of the next-hop to which
        the packet should be forwarded and what operation should be performed
        on the SR header (PUSH, CONTINUE, NEXT).</t>

        <figure anchor="SRDATABASE" title="SR Database">
          <artwork>+---------+-----------+---------------------------------+
| Segment |  Next-Hop |  SR Header operation            |
+---------+-----------+---------------------------------+
|   Sk    |     M     | CONTINUE                        |
|   Sj    |     N     | NEXT                            |
|   Sl    | NAT Srvc  | NEXT                            |
|   Sm    |  FW srvc  | NEXT                            |
|   Sn    |     Q     | NEXT                            |
|  etc.   |   etc.    | etc.                            |
+---------+-----------+---------------------------------+</artwork>
        </figure>

        <t>Each SR-capable node maintains its local SRDB. SRDB entries can
        either derive from local policy or or from protocol segment
        advertisement. The next section will detail segment advertisement by
        IGP protocols.&rdquo;</t>
      </section>
    </section>

    <section anchor="IGPSEGMENTS" title="Link-State IGP Segments">
      <t>Within a link-state IGP domain, an SR-capable IGP node advertises
      segments for its attached prefixes and adjacencies. These segments are
      called IGP segments or IGP SIDs. They play a key role in the Segment
      Routing architecture and use-cases <xref
      target="I-D.filsfils-rtgwg-segment-routing-use-cases"/> as they enable
      the expression of any topological path throughout the IGP domain. Such a
      topological path is either expressed as a single IGP segment or a list
      of multiple IGP segments.</t>

      <t>In the first sub-section, we introduce a terminology for a set of IGP
      segments which are very frequently seen in the SR use-cases. The second
      sub-section details the IGP segment allocation and SRDB construction
      rules.</t>

      <section anchor="IGPILLUSTRATION" title="Illustration">
        <t>Assuming the network diagram of <xref target="IGPSEGMENTSFIG"/> and
        the IP address and IGP Segment allocation of <xref
        target="SEGMENTALLOCFIG"/>, the following examples can be
        constructed.</t>

        <figure align="center" anchor="IGPSEGMENTSFIG"
                title="IGP Segments &ndash; Illustration">
          <artwork>         +--------+
        /          \
R1-----R2----------R3-----R8
       | \        / |
       |  +--R4--+  |
       |            |      
       +-----R5-----+</artwork>
        </figure>

        <figure anchor="SEGMENTALLOCFIG"
                title="IGP Address and Segment Allocation - Illustration">
          <artwork>+-----------------------------------------------------------+
| IP address allocated by the operator:                     |
|                      192.0.2.1/32 as a loopback of R1     |
|                      192.0.2.2/32 as a loopback of R2     |
|                      192.0.2.3/32 as a loopback of R3     |
|                      192.0.2.4/32 as a loopback of R4     |
|                      192.0.2.5/32 as a loopback of R5     |
|                      192.0.2.8/32 as a loopback of R8     |
|              198.51.100.9/32 as an anycast loopback of R4 |
|              198.51.100.9/32 as an anycast loopback of R5 |
|                                                           |
| SRGB defined by the operator as 1000-5000                 |
|                                                           |
| Global IGP SID allocated by the operator:                 |
|                      1001 allocated to 192.0.2.1/32       |
|                      1002 allocated to 192.0.2.2/32       |
|                      1003 allocated to 192.0.2.3/32       |
|                      1004 allocated to 192.0.2.4/32       |
|                      1008 allocated to 192.0.2.8/32       |
|                      2009 allocated to 198.51.100.9/32    |
|                                                           |
| Local IGP SID allocated dynamically by R2                 |
|                     for its &ldquo;north&rdquo; adjacency to R3: 9001 |
|                     for its &ldquo;north&rdquo; adjacency to R3: 9003 |
|                     for its &ldquo;south&rdquo; adjacency to R3: 9002 |
|                     for its &ldquo;south&rdquo; adjacency to R3: 9003 |
+-----------------------------------------------------------+</artwork>
        </figure>

        <section anchor="EXAMPLE1" title="Example 1">
          <t>R1 may send a packet P1 to R8 simply by pushing an SR header with
          segment list {1008}.</t>

          <t>1008 is a global IGP segment attached to the IP prefix
          192.0.2.8/32. Its semantic is global within the IGP domain: any
          router forwards a packet received with active segment 1008 to the
          next-hop along the ECMP-aware shortest-path to the related
          prefix.</t>

          <t>In conclusion, the path followed by P1 is R1-R2--R3-R8. The
          ECMP-awareness ensures that the traffic be load-shared between any
          ECMP path, in this case the two north and south links between R2 and
          R3.</t>
        </section>

        <section anchor="EXAMPLE2" title="Example 2">
          <t>R1 may send a packet P2 to R8 by pushing an SR header with
          segment list {1002, 9001, 1008}.</t>

          <t>1002 is a global IGP segment attached to the IP prefix
          192.0.2.2/32. Its semantic is global within the IGP domain: any
          router forwards a packet received with active segment 1002 to the
          next-hop along the shortest-path to the related prefix.</t>

          <t>9001 is a local IGP segment attached by node R2 to its north link
          to R3. Its semantic is local to node R2: R2 switches a packet
          received with active segment 9001 towards the north link to R3.</t>

          <t>In conclusion, the path followed by P2 is
          R1-R2-north-link-R3-R8.</t>
        </section>

        <section anchor="EXAMPLE3" title="Example 3">
          <t>R1 may send a packet P3 along the same exact path as P1 using a
          different segment list {1002, 9003, 1008}.</t>

          <t>9003 is a local IGP segment attached by node R2 to both its north
          and south links to R3. Its semantic is local to node R2: R2 switches
          a packet received with active segment 9003 towards either the north
          or south links to R3 (e.g. per-flow loadbalancing decision).</t>

          <t>In conclusion, the path followed by P3 is
          R1-R2-any-link-R3-R8.</t>
        </section>

        <section anchor="EXAMPLE4" title="Example 4">
          <t>R1 may send a packet P4 to R8 while avoiding the links between R2
          and R3 by pushing an SR header with segment list {1004, 1008}.</t>

          <t>1004 is a global IGP segment attached to the IP prefix
          192.0.2.4/32. Its semantic is global within the IGP domain: any
          router forwards a packet received with active segment 1004 to the
          next-hop along the shortest-path to the related prefix.</t>

          <t>In conclusion, the path followed by P4 is R1-R2-R4-R3-R8.</t>
        </section>

        <section anchor="EXAMPLE5" title="Example 5">
          <t>R1 may send a packet P5 to R8 while avoiding the links between R2
          and R3 while still benefitting from all the remaining shortest paths
          (via R4 and R5) by pushing an SR header with segment list {2009,
          1008}.</t>

          <t>2009 is a global IGP segment attached to the anycast IP prefix
          198.51.100.9/32. Its semantic is global within the IGP domain: any
          router forwards a packet received with active segment 2009 to the
          next-hop along the shortest-path to the related prefix.</t>

          <t>In conclusion, the path followed by P5 is either R1-R2-R4-R3-R8
          or R1-R2-R5-R3-R8 .</t>
        </section>
      </section>

      <section anchor="IGPTERMINOLOGY" title="IGP Segment Terminology">
        <section anchor="IGPSID" title="IGP Segment, IGP SID">
          <t>The terms &ldquo;IGP Segment&rdquo; and &ldquo;IGP SID&rdquo; are
          the generic names for a segment attached to a piece of information
          advertised by a link-state IGP, e.g. an IGP prefix or an IGP
          adjacency.</t>

          <t>The IGP signaling extension to advertise an IGP segment includes
          the G-Flag indicating whether the IGP segment is global or
          local.</t>

          <figure align="center" anchor="IGPTERMFIG"
                  title="IGP SID Terminology">
            <artwork>                 IGP-SID
                 +--+--+
                /   |   \
       Prefix-SID   x   Adj-SID
       +----+---+      
      /     |    \
Node-SID    y   Anycast-SID     </artwork>
          </figure>

          <t>The IGP Segment terminology is introduced to ease the
          documentation of SR use-cases and hence does not propose a name for
          any possible variation of IGP segment supported by the architecture.
          For example, y in <xref target="IGPTERMFIG"/> could represent a
          local IGP segment attached to an IGP Prefix. This variation, while
          supported by the SR architecture is not seen in the SR use-cases and
          hence does not receive a specific name.</t>

          <t>In <xref target="IGPSEGMENTSFIG"/> and <xref
          target="SEGMENTALLOCFIG"/>, SIDs 1001, 1002, 1003, 1004, 1008, 2009,
          9001, 9002 and 9003 are called IGP SIDs.</t>
        </section>

        <section anchor="PREFIXSID" title="IGP-Prefix Segment, Prefix-SID">
          <t>An IGP-Prefix Segment is an IGP segment attached to an IGP
          prefix. An IGP-Prefix Segment is always global within the SR/IGP
          domain and identifies the ECMP-aware shortest-path computed by the
          IGP to the related prefix. The G-Flag MUST be set. The Prefix-SID is
          the SID of the IGP-Prefix Segment.</t>

          <t>A packet injected anywhere within the SR/IGP domain with an
          active Prefix-SID will be forwarded along the shortest-path to that
          prefix.</t>

          <t>The IGP signaling extension for IGP-Prefix segment includes the
          P-Flag. A Node N advertising a Prefix-SID SID-R for its attached
          prefix R resets the P-Flag to allow its connected neighbors to
          perform the NEXT operation while processing SID-R. This behavior is
          equivalent to Pen-ultimate Hop Popping in MPLS. When set, the
          neighbors of N must perform the CONTINUE operation while processing
          SID-R.</t>

          <t>While the architecture allows to attach a local segment to an IGP
          prefix, we specifically assume that when the terms &ldquo;IGP-Prefix
          Segment&rdquo; and &ldquo;Prefix-SID&rdquo; are used then the
          segment is global (the SID is allocated from the SRGB). This is
          consistent with <xref
          target="I-D.filsfils-rtgwg-segment-routing-use-cases"/> as all the
          described use-cases require global segments attached to IGP
          prefix.</t>

          <t>In <xref target="IGPSEGMENTSFIG"/> and <xref
          target="SEGMENTALLOCFIG"/>, SIDs 1001, 1002, 1003, 1004, 1008, 2009
          are called Prefix-SIDs.</t>
        </section>

        <section anchor="NODESID" title="IGP-Node Segment, Node-SID">
          <t>An IGP-Node Segment is a an IGP-Prefix Segment which identifies a
          specific router (e.g. a loopback). The terms &ldquo;Node
          Segment&rdquo; or &ldquo;Node-SID&rdquo; are often used as an
          abbreviation.</t>

          <t>A &ldquo;Node Segment&rdquo; or &ldquo;Node-SID&rdquo; is
          fundamental to the SR architecture. From anywhere in the network, it
          enforces the ECMP-aware shortest-path forwarding of the packet
          towards the related node as explained in <xref
          target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>

          <t>In <xref target="IGPSEGMENTSFIG"/> and <xref
          target="SEGMENTALLOCFIG"/>, SIDs 1001, 1002, 1003, 1004 and 1008 are
          called Node-SIDs.</t>
        </section>

        <section anchor="ANYSID" title="IGP-Anycast Segment, Anycast SID">
          <t>An IGP-Anycast Segment is an IGP-prefix segment which does not
          identify a specific router, but a set of routers. The terms
          &ldquo;Anycast Segment&rdquo; or &ldquo;Anycast-SID&rdquo; are often
          used as an abbreviation.</t>

          <t>An &ldquo;Anycast Segment&rdquo; or &ldquo;Anycast SID&rdquo;
          enforces the ECMP-aware shortest-path forwarding towards the closest
          node of the anycast set. This is useful to express macro-engineering
          policies as described in <xref
          target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>

          <t>In <xref target="IGPSEGMENTSFIG"/> and <xref
          target="SEGMENTALLOCFIG"/>, SID 2009 is called Anycast SID.</t>
        </section>

        <section anchor="ADJSID" title="IGP-Adjacency Segment, Adj-SID">
          <t>An IGP-Adjacency Segment is an IGP segment attached to an
          unidirectional adjacency or a set of unidirectional adjacencies. An
          IGP-Adjacency Segment is local to the node which advertises it. The
          SID of the IGP-Adjacency Segment is called the Adj-SID. The G-Flag
          must be reset.</t>

          <t>The adjacency is formed by the local node (i.e.: the node
          advertising the adjacency in the IGP) and the remote node (i.e.: the
          other end of the adjacency). The local node MUST be an IGP node. The
          remote node MAY be:<list style="hanging">
              <t>An adjacent IGP node (i.e.: an IGP neighbor).</t>

              <t>A non-adjacent neighbor (e.g.: a Forwarding Adjacency, <xref
              target="RFC4206"/>).</t>

              <t>A virtual neighbor outside the IGP domain (e.g.: an interface
              connecting another AS) as defined in <xref
              target="RFC5316"/>.</t>
            </list></t>

          <t>A packet injected anywhere within the SR/IGP domain with a
          segment list {SN, SNL}, where SN is the Node-SID of node N and SNL
          is an Adj-Sid attached by node N to its adjacency over link L, will
          be forwarded along the shortest-path to N and then be switched by N,
          without any IP shortest-path consideration, towards link L. If the
          Adj-Sid identifies a set of adjacencies, then the node N
          load-balances the traffic along the various members of the set.</t>

          <t/>

          <t>An &ldquo;IGP Adjacency Segment&rdquo; or &ldquo;Adj-SID&rdquo;
          enforces the switching of the packet from a note towards a defined
          interface or set of interfaces. This is key to theoretically prove
          that any path can be expressed as a list of segments as explained in
          <xref target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>

          <t>In <xref target="IGPSEGMENTSFIG"/> and <xref
          target="SEGMENTALLOCFIG"/>, SIDs 9001, 9002 and 9003 are called
          Adj-SIDs.</t>
        </section>

        <section anchor="FINALLY" title="Finally">
          <t>Figure 8 summarizes the different terms that can be used to refer
          to the SID&rsquo;s used in the example illustrated by <xref
          target="IGPSEGMENTSFIG"/> and <xref target="SEGMENTALLOCFIG"/>.
          &ldquo;Y&rdquo; means that the term can be used to refer to the SID,
          &ldquo;N&rdquo; means that the term cannot be used to refer to the
          SID.</t>

          <figure anchor="TERMEXAMPLEFIG" title="Terminology Example">
            <artwork>+---------------------------------------------------------------+
|  SID  | IGP SID | Prefix-SID | Node-SID| Anycast SID| Adj-SID |
| Value |         |            |         |            |         |
+---------------------------------------------------------------+
| 1001  |    Y    |      Y     |    Y    |      N     |    N    |
| 1002  |    Y    |      Y     |    Y    |      N     |    N    |
| 1003  |    Y    |      Y     |    Y    |      N     |    N    |
| 1004  |    Y    |      Y     |    Y    |      N     |    N    |
| 1005  |    Y    |      Y     |    Y    |      N     |    N    |
| 1008  |    Y    |      Y     |    Y    |      N     |    N    |
| 2009  |    Y    |      Y     |    N    |      Y     |    N    |
| 9001  |    Y    |      N     |    N    |      N     |    Y    |
| 9002  |    Y    |      N     |    N    |      N     |    Y    |
| 9003  |    Y    |      N     |    N    |      N     |    Y    |
+---------------------------------------------------------------+</artwork>
          </figure>
        </section>
      </section>

      <section anchor="IGPMGMT"
               title="IGP Segment Allocation, Advertisement and SRDB Maintenance">
        <section anchor="MGMTPREFIXSID" title="Prefix-SID">
          <t>Multiple Prefix-SID&rsquo;s may be allocated to the same IGP
          Prefix (e.g. for class of service purpose). Typically a single
          Prefix-SID is allocated to an IGP Prefix.</t>

          <t>A Prefix-SID is allocated from the SRGB according to a similar
          process to IP address allocation. Typically the Prefix-SID is
          allocated by policy by the operator (or NMS) and the SID very rarely
          changes.</t>

          <t>The allocation process MUST NOT allocate the same Prefix-SID to
          different IP prefixes.</t>

          <t>If a node learns a Prefix-SID having a value that falls outside
          the locally configured SRGB range, then the node MUST NOT use the
          Prefix-SID and SHOULD issue an error log warning for
          misconfiguration.</t>

          <t>The required IGP protocol extensions are defined in <xref
          target="I-D.previdi-isis-segment-routing-extensions"/>, <xref
          target="I-D.psenak-ospf-segment-routing-extensions"/> and <xref
          target="I-D.psenak-ospf-segment-routing-ospfv3-extension"/>.</t>

          <t>A node N attaching a Prefix-SID SID-R to its attached prefix R
          MUST maintain the following SRDB entry:<figure>
              <artwork>Incoming Active Segment: SID-R
Ingress Operation: NEXT
Egress interface: NULL</artwork>
            </figure></t>

          <t>A remote node M MUST maintain the following SRDB entry for any
          learned Prefix-SID SID-R attached to IP prefix R:<figure>
              <artwork>Incoming Active Segment: SID-R
Ingress Operation: 
         If the next-hop of R is the originator of R 
         and instructed to remove the active segment: NEXT
         Else: CONTINUE
Egress interface: the interface towards the next-hop along 
         the shortest-path to prefix R.</artwork>
            </figure></t>
        </section>

        <section anchor="MGMTADJSID" title="Adj-SID">
          <t>The Adjacency Segment SID (Adj-SID) identifies a unidirectional
          adjacency or a set of unidirectional adjacencies.</t>

          <figure>
            <artwork>A node SHOULD allocate one Adj-SIDs for each of its adjacencies.
A node MAY allocate multiple Adj-SIDs to the same adjacency.
A node MAY allocate the same Adj-SID to multiple adjacencies.</artwork>
          </figure>

          <t>Adjacency suppression MUST NOT be performed by the IGP.</t>

          <t>A node MUST install an SRDB entry for any Adj-SID of value V
          attached to data-link L:<figure>
              <artwork>Incoming Active Segment: V
Operation: NEXT
Egress Interface: L</artwork>
            </figure></t>

          <t>When associated to a Forwarding Adjacency (<xref
          target="RFC4206"/>), the Adj-SID MAY also include the necessary
          information in order to describe the path to the remote end of the
          Forwarding Adjacency in the form of an Explicit Route Object.</t>

          <t>The Adj-SID implies, from the router advertising it, the
          forwarding of the packet through the adjacency identified by the
          Adj-SID, regardless its IGP/SPF cost. In other words, the use of
          Adjacency Segments overrides the routing decision made by SPF
          algorithm.</t>

          <section anchor="PARALLELADJ" title="Parallel Adjacencies">
            <t>Adj-SIDs can be used in order to represent a set of parallel
            interfaces between two adjacent routers. For example, SID 9003 in
            figures 5 and 6 identify the set of interfaces between R2 and
            R3.</t>

            <t>A node MUST install an SRDB entry for any locally originated
            Adjacency Segment (Adj-SID) of value W attached to a set of link B
            with: <figure>
                <artwork>Incoming Active Segment: W
Ingress Operation: NEXT
Egress interface: loadbalance between any data-link within set B</artwork>
              </figure></t>
          </section>

          <section anchor="LANADJSID" title="LAN Adjacency Segments">
            <t>In LAN subnetworks, link-state protocols define the concept of
            Designated Router (DR, in OSPF) or Designated Intermediate System
            (DIS, in IS-IS) that conduct flooding in broadcast subnetworks and
            that describe the LAN topology in a special routing update (OSPF
            Type2 LSA or IS-IS Pseudonode LSP).</t>

            <t>The difficulty with LANs is that each router only advertises
            its connectivity to the DR/DIS and not to each other individual
            nodes in the LAN. Therefore, additional protocol mechanisms (IS-IS
            and OSPF) are necessary in order for each router in the LAN to
            advertise an Adj-SID associated to each neighbor in the LAN. These
            extensions are defined in <xref
            target="I-D.previdi-isis-segment-routing-extensions"/>, <xref
            target="I-D.psenak-ospf-segment-routing-extensions"/> and <xref
            target="I-D.psenak-ospf-segment-routing-ospfv3-extension"/>.</t>
          </section>

          <section anchor="EXTADJSID"
                   title="External Adjacencies Considerations">
            <t>IGPs have been extended in order to advertise virtual
            adjacencies that represent external links (<xref
            target="RFC5316"/>).</t>

            <t>Segment Routing allows to allocate an Adj-SID to these external
            links.</t>

            <figure align="center" anchor="EXTADJFIG"
                    title="External Adjacency Example">
              <artwork>         AS1     )       (    AS2
        IGP-1    ) eBGP  (   IGP-2
                 )       (
       B------C--)-------(--F-----G
      /       |  )       (  |     |
S---A/        |  )       (  |     |
     \        |  )       (  |     |
      \D------E--)-------(--H-----I----Z
                 )       (
                 )       (</artwork>
            </figure>

            <t>In the diagram above, C advertises in the IGP an adjacency to
            peer F of AS2 together with an associated Adj-SID. When S wants to
            force an inter-domain path to Z via the peering link CF, S
            encapsulates the packets with the list {Prefix-SID(C),
            Adj-SID(C,F, AS2)}.</t>

            <t><xref target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>
            provides an external-adjacency use-case.</t>
          </section>
        </section>
      </section>

      <section anchor="INTERAREA" title="Inter-Area Considerations">
        <t>In the following example diagram we assume an IGP deployed using
        areas and where SR has been deployed.</t>

        <figure align="center" anchor="INTERAREAFIG"
                title="Inter-Area Topology Example">
          <artwork>              !          !
              !          !
       B------C-----F----G-----K
      /       |          |     |
S---A/        |          |     |
     \        |          |     |
      \D------I----------J-----L----Z (192.0.2.1/32, Node-SID: 150)
              !          !
      Area-1  ! Backbone ! Area 2
              !   area   !</artwork>
        </figure>

        <t>In area 2, node Z allocates Node-SID 150 to his local prefix
        192.0.2.1/32. ABRs G and J will propagate the prefix into the backbone
        area by creating a new instance of the prefix according to normal
        inter-area/level IGP propagation rules.</t>

        <t>Nodes C and I will apply the same behavior when leaking prefixes
        from the backbone area down to area 1. Therefore, node S will see
        prefix 192.0.2.1/32 with Prefix-SID 150 and advertised by nodes C and
        I.</t>

        <t>It therefore results that a Prefix-SID remains attached to its
        related IGP Prefix through the inter-area process.</t>

        <t>When node S sends traffic to 192.0.2.1/32, it pushes Node-SID(150)
        as active segment and forward it to A.</t>

        <t>When packet arrives at ABR I (or C), the ABR forwards the packet
        according to the active segment (Node-SID(150)). Forwarding continues
        across area borders, using the same Node-SID(150), until the packet
        reaches its destination.</t>

        <t>When an ABR propagates a prefix from one area to another it MUST
        set the R-Flag.</t>
      </section>

      <section anchor="MIRRORING" title="IGP Mirroring Context  Segment">
        <t>It is beneficial for an IGP node to be able to advertise its
        ability to process traffic originally destined to another IGP node,
        called the Mirrored node and identified by an IP address or a
        Node-SID, provided that a &ldquo;Mirroring Context&rdquo; segment be
        inserted in the segment list prior to any service segment local to the
        mirrored node.</t>

        <t><xref target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>
        illustrates such a use-case where two IGP nodes offer the same set of
        services (e.g. BGP VPN) and mirror each other upon their failure. A
        similar behavior is described in <xref
        target="I-D.minto-rsvp-lsp-egress-fast-protection"/>.</t>

        <t>IS-IS and OSPF Router Capability extensions are described in <xref
        target="I-D.previdi-isis-segment-routing-extensions"/>, <xref
        target="I-D.psenak-ospf-segment-routing-extensions"/> and <xref
        target="I-D.psenak-ospf-segment-routing-ospfv3-extension"/>.</t>
      </section>
    </section>

    <section anchor="SRVCSSEGMENTS" title="Service Segments">
      <t>A service segment refers to a service offered by a node (e.g.
      firewall, vpn, etc.).</t>

      <t>Further informations will be included in future revisions.</t>
    </section>

    <section anchor="OAM" title="OAM">
      <t>SR offers an interesting capability to monitor SR domains:<list
          style="hanging">
          <t>Any path can be monitored by setting the segment list
          accordingly.</t>

          <t>A path can be expressed with ECMP-awareness or not.</t>

          <t>The probe travels along the desired path while staying at the
          forwarding level.</t>

          <t>A monitoring system is able to check any element of the entire SR
          domain, even if it located multiple hops away.</t>
        </list></t>

      <t>Some elements of the SR/OAM functionality will require
      standardization and a related independent draft will eventually be
      submitted.</t>

      <t>SR/OAM use-cases are described in <xref
      target="I-D.filsfils-rtgwg-segment-routing-use-cases"/>.</t>
    </section>

    <section anchor="MULTICAST" title="Multicast">
      <t>The text will be added in future revision.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>TBD</t>
    </section>

    <section anchor="Manageability" title="Manageability Considerations">
      <t>TBD</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>TBD</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>We would like to thank Dave Ward, Dan Frost, Stewart Bryant, Pierre
      Francois, Thomas Telkamp, Les Ginsberg, Ruediger Geib and Hannes Gredler
      for their contribution to the content of this document.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.4206.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.5316.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.3031.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2460.xml"?>

      <?rfc ?>
    </references>

    <references title="Informative References">
      <reference anchor="draft-filsfils-spring-segment-routing-ldp-interop-00">
        <front>
          <title>Segment Routing interoperability with LDP</title>

          <author fullname="Clarence Filsfils" initials="C."
                  surname="Filsfils"/>

          <author fullname="Stefano Previdi" initials="S." surname="Previdi"/>

          <date day="1" month="October" year="2013"/>
        </front>
      </reference>

      <reference anchor="draft-filsfils-spring-segment-routing-mpls-00">
        <front>
          <title>Segment Routing with MPLS data plane</title>

          <author fullname="Clarence Filsfils" initials="C."
                  surname="Filsfils"/>

          <author fullname="Stefano Previdi" initials="S." surname="Previdi"/>

          <date day="1" month="October" year="2013"/>
        </front>
      </reference>

      <reference anchor="I-D.psenak-ospf-segment-routing-ospfv3-extension">
        <front>
          <title>OSPFv3 Extensions for Segment Routing</title>

          <author fullname="Peter Psenak" initials="P." surname="Psenak"/>

          <author fullname="Stefano Previdi" initials="S." surname="Previdi"/>

          <date day="18" month="October" year="2013"/>
        </front>
      </reference>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-minto-rsvp-lsp-egress-fast-protection-02.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-filsfils-rtgwg-segment-routing-use-cases-01.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-previdi-isis-segment-routing-extensions-02.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-psenak-ospf-segment-routing-extensions-02.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-sivabalan-pce-segment-routing-02.xml"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-francois-sr-frr-00"?>

      <?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.1940.xml"?>

      <?rfc ?>
    </references>
  </back>
</rfc>
